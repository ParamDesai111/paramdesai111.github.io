{"ast":null,"code":"import { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { errorPrefix } from \"./Utils/Constants.js\";\nimport { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n  return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = 60, smooth = false) {\n  return {\n    value,\n    factor: smooth ? 60 / fpsLimit : 60 * value / 1000\n  };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n  const options = new Options(engine, container);\n  loadOptions(options, ...sourceOptionsArr);\n  return options;\n}\nexport class Container {\n  constructor(engine, id, sourceOptions) {\n    this._intersectionManager = entries => {\n      if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n        return;\n      }\n      for (const entry of entries) {\n        if (entry.target !== this.interactivity.element) {\n          continue;\n        }\n        (entry.isIntersecting ? this.play : this.pause)();\n      }\n    };\n    this._nextFrame = async timestamp => {\n      try {\n        if (!this._smooth && this._lastFrameTime !== undefined && timestamp < this._lastFrameTime + 1000 / this.fpsLimit) {\n          this.draw(false);\n          return;\n        }\n        this._lastFrameTime ??= timestamp;\n        const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n        this.addLifeTime(delta.value);\n        this._lastFrameTime = timestamp;\n        if (delta.value > 1000) {\n          this.draw(false);\n          return;\n        }\n        await this.particles.draw(delta);\n        if (!this.alive()) {\n          this.destroy();\n          return;\n        }\n        if (this.getAnimationStatus()) {\n          this.draw(false);\n        }\n      } catch (e) {\n        getLogger().error(`${errorPrefix} in animation loop`, e);\n      }\n    };\n    this._engine = engine;\n    this.id = Symbol(id);\n    this.fpsLimit = 120;\n    this._smooth = false;\n    this._delay = 0;\n    this._duration = 0;\n    this._lifeTime = 0;\n    this._firstStart = true;\n    this.started = false;\n    this.destroyed = false;\n    this._paused = true;\n    this._lastFrameTime = 0;\n    this.zLayers = 100;\n    this.pageHidden = false;\n    this._sourceOptions = sourceOptions;\n    this._initialSourceOptions = sourceOptions;\n    this.retina = new Retina(this);\n    this.canvas = new Canvas(this);\n    this.particles = new Particles(this._engine, this);\n    this.pathGenerators = new Map();\n    this.interactivity = {\n      mouse: {\n        clicking: false,\n        inside: false\n      }\n    };\n    this.plugins = new Map();\n    this.effectDrawers = new Map();\n    this.shapeDrawers = new Map();\n    this._options = loadContainerOptions(this._engine, this);\n    this.actualOptions = loadContainerOptions(this._engine, this);\n    this._eventListeners = new EventListeners(this);\n    this._intersectionObserver = safeIntersectionObserver(entries => this._intersectionManager(entries));\n    this._engine.dispatchEvent(\"containerBuilt\", {\n      container: this\n    });\n  }\n  get options() {\n    return this._options;\n  }\n  get sourceOptions() {\n    return this._sourceOptions;\n  }\n  addClickHandler(callback) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    const el = this.interactivity.element;\n    if (!el) {\n      return;\n    }\n    const clickOrTouchHandler = (e, pos, radius) => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      const pxRatio = this.retina.pixelRatio,\n        posRetina = {\n          x: pos.x * pxRatio,\n          y: pos.y * pxRatio\n        },\n        particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n      callback(e, particles);\n    };\n    const clickHandler = e => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      const mouseEvent = e,\n        pos = {\n          x: mouseEvent.offsetX || mouseEvent.clientX,\n          y: mouseEvent.offsetY || mouseEvent.clientY\n        };\n      clickOrTouchHandler(e, pos, 1);\n    };\n    const touchStartHandler = () => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      touched = true;\n      touchMoved = false;\n    };\n    const touchMoveHandler = () => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      touchMoved = true;\n    };\n    const touchEndHandler = e => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      if (touched && !touchMoved) {\n        const touchEvent = e;\n        let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n        if (!lastTouch) {\n          lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n          if (!lastTouch) {\n            return;\n          }\n        }\n        const element = this.canvas.element,\n          canvasRect = element ? element.getBoundingClientRect() : undefined,\n          pos = {\n            x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n            y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0)\n          };\n        clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n      }\n      touched = false;\n      touchMoved = false;\n    };\n    const touchCancelHandler = () => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      touched = false;\n      touchMoved = false;\n    };\n    let touched = false,\n      touchMoved = false;\n    el.addEventListener(\"click\", clickHandler);\n    el.addEventListener(\"touchstart\", touchStartHandler);\n    el.addEventListener(\"touchmove\", touchMoveHandler);\n    el.addEventListener(\"touchend\", touchEndHandler);\n    el.addEventListener(\"touchcancel\", touchCancelHandler);\n  }\n  addLifeTime(value) {\n    this._lifeTime += value;\n  }\n  addPath(key, generator, override = false) {\n    if (!guardCheck(this) || !override && this.pathGenerators.has(key)) {\n      return false;\n    }\n    this.pathGenerators.set(key, generator);\n    return true;\n  }\n  alive() {\n    return !this._duration || this._lifeTime <= this._duration;\n  }\n  destroy() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.stop();\n    this.particles.destroy();\n    this.canvas.destroy();\n    for (const [, effectDrawer] of this.effectDrawers) {\n      effectDrawer.destroy && effectDrawer.destroy(this);\n    }\n    for (const [, shapeDrawer] of this.shapeDrawers) {\n      shapeDrawer.destroy && shapeDrawer.destroy(this);\n    }\n    for (const key of this.effectDrawers.keys()) {\n      this.effectDrawers.delete(key);\n    }\n    for (const key of this.shapeDrawers.keys()) {\n      this.shapeDrawers.delete(key);\n    }\n    this._engine.clearPlugins(this);\n    this.destroyed = true;\n    const mainArr = this._engine.dom(),\n      idx = mainArr.findIndex(t => t === this);\n    if (idx >= 0) {\n      mainArr.splice(idx, 1);\n    }\n    this._engine.dispatchEvent(\"containerDestroyed\", {\n      container: this\n    });\n  }\n  draw(force) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    let refreshTime = force;\n    this._drawAnimationFrame = requestAnimationFrame(async timestamp => {\n      if (refreshTime) {\n        this._lastFrameTime = undefined;\n        refreshTime = false;\n      }\n      await this._nextFrame(timestamp);\n    });\n  }\n  async export(type, options = {}) {\n    for (const [, plugin] of this.plugins) {\n      if (!plugin.export) {\n        continue;\n      }\n      const res = await plugin.export(type, options);\n      if (!res.supported) {\n        continue;\n      }\n      return res.blob;\n    }\n    getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n  }\n  getAnimationStatus() {\n    return !this._paused && !this.pageHidden && guardCheck(this);\n  }\n  handleClickMode(mode) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.particles.handleClickMode(mode);\n    for (const [, plugin] of this.plugins) {\n      plugin.handleClickMode && plugin.handleClickMode(mode);\n    }\n  }\n  async init() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    const effects = this._engine.getSupportedEffects();\n    for (const type of effects) {\n      const drawer = this._engine.getEffectDrawer(type);\n      if (drawer) {\n        this.effectDrawers.set(type, drawer);\n      }\n    }\n    const shapes = this._engine.getSupportedShapes();\n    for (const type of shapes) {\n      const drawer = this._engine.getShapeDrawer(type);\n      if (drawer) {\n        this.shapeDrawers.set(type, drawer);\n      }\n    }\n    this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n    this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n    const availablePlugins = this._engine.getAvailablePlugins(this);\n    for (const [id, plugin] of availablePlugins) {\n      this.plugins.set(id, plugin);\n    }\n    this.retina.init();\n    await this.canvas.init();\n    this.updateActualOptions();\n    this.canvas.initBackground();\n    this.canvas.resize();\n    this.zLayers = this.actualOptions.zLayers;\n    this._duration = getRangeValue(this.actualOptions.duration) * 1000;\n    this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n    this._lifeTime = 0;\n    this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n    this._smooth = this.actualOptions.smooth;\n    for (const [, drawer] of this.effectDrawers) {\n      drawer.init && (await drawer.init(this));\n    }\n    for (const [, drawer] of this.shapeDrawers) {\n      drawer.init && (await drawer.init(this));\n    }\n    for (const [, plugin] of this.plugins) {\n      plugin.init && (await plugin.init());\n    }\n    this._engine.dispatchEvent(\"containerInit\", {\n      container: this\n    });\n    this.particles.init();\n    this.particles.setDensity();\n    for (const [, plugin] of this.plugins) {\n      plugin.particlesSetup && plugin.particlesSetup();\n    }\n    this._engine.dispatchEvent(\"particlesSetup\", {\n      container: this\n    });\n  }\n  async loadTheme(name) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this._currentTheme = name;\n    await this.refresh();\n  }\n  pause() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    if (this._drawAnimationFrame !== undefined) {\n      cancelAnimationFrame(this._drawAnimationFrame);\n      delete this._drawAnimationFrame;\n    }\n    if (this._paused) {\n      return;\n    }\n    for (const [, plugin] of this.plugins) {\n      plugin.pause && plugin.pause();\n    }\n    if (!this.pageHidden) {\n      this._paused = true;\n    }\n    this._engine.dispatchEvent(\"containerPaused\", {\n      container: this\n    });\n  }\n  play(force) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    const needsUpdate = this._paused || force;\n    if (this._firstStart && !this.actualOptions.autoPlay) {\n      this._firstStart = false;\n      return;\n    }\n    if (this._paused) {\n      this._paused = false;\n    }\n    if (needsUpdate) {\n      for (const [, plugin] of this.plugins) {\n        if (plugin.play) {\n          plugin.play();\n        }\n      }\n    }\n    this._engine.dispatchEvent(\"containerPlay\", {\n      container: this\n    });\n    this.draw(needsUpdate || false);\n  }\n  async refresh() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.stop();\n    return this.start();\n  }\n  async reset() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this._initialSourceOptions = undefined;\n    this._options = loadContainerOptions(this._engine, this);\n    this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n    return this.refresh();\n  }\n  async start() {\n    if (!guardCheck(this) || this.started) {\n      return;\n    }\n    await this.init();\n    this.started = true;\n    await new Promise(resolve => {\n      this._delayTimeout = setTimeout(async () => {\n        this._eventListeners.addListeners();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n          this._intersectionObserver.observe(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n          plugin.start && (await plugin.start());\n        }\n        this._engine.dispatchEvent(\"containerStarted\", {\n          container: this\n        });\n        this.play();\n        resolve();\n      }, this._delay);\n    });\n  }\n  stop() {\n    if (!guardCheck(this) || !this.started) {\n      return;\n    }\n    if (this._delayTimeout) {\n      clearTimeout(this._delayTimeout);\n      delete this._delayTimeout;\n    }\n    this._firstStart = true;\n    this.started = false;\n    this._eventListeners.removeListeners();\n    this.pause();\n    this.particles.clear();\n    this.canvas.stop();\n    if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n      this._intersectionObserver.unobserve(this.interactivity.element);\n    }\n    for (const [, plugin] of this.plugins) {\n      plugin.stop && plugin.stop();\n    }\n    for (const key of this.plugins.keys()) {\n      this.plugins.delete(key);\n    }\n    this._sourceOptions = this._options;\n    this._engine.dispatchEvent(\"containerStopped\", {\n      container: this\n    });\n  }\n  updateActualOptions() {\n    this.actualOptions.responsive = [];\n    const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n    this.actualOptions.setTheme(this._currentTheme);\n    if (this._responsiveMaxWidth === newMaxWidth) {\n      return false;\n    }\n    this._responsiveMaxWidth = newMaxWidth;\n    return true;\n  }\n}","map":{"version":3,"names":["getLogger","safeIntersectionObserver","Canvas","EventListeners","Options","Particles","Retina","errorPrefix","getRangeValue","loadOptions","guardCheck","container","destroyed","initDelta","value","fpsLimit","smooth","factor","loadContainerOptions","engine","sourceOptionsArr","options","Container","constructor","id","sourceOptions","_intersectionManager","entries","actualOptions","pauseOnOutsideViewport","entry","target","interactivity","element","isIntersecting","play","pause","_nextFrame","timestamp","_smooth","_lastFrameTime","undefined","draw","delta","addLifeTime","particles","alive","destroy","getAnimationStatus","e","error","_engine","Symbol","_delay","_duration","_lifeTime","_firstStart","started","_paused","zLayers","pageHidden","_sourceOptions","_initialSourceOptions","retina","canvas","pathGenerators","Map","mouse","clicking","inside","plugins","effectDrawers","shapeDrawers","_options","_eventListeners","_intersectionObserver","dispatchEvent","addClickHandler","callback","el","clickOrTouchHandler","pos","radius","pxRatio","pixelRatio","posRetina","x","y","quadTree","queryCircle","clickHandler","mouseEvent","offsetX","clientX","offsetY","clientY","touchStartHandler","touched","touchMoved","touchMoveHandler","touchEndHandler","touchEvent","lastTouch","touches","length","changedTouches","canvasRect","getBoundingClientRect","left","top","Math","max","radiusX","radiusY","touchCancelHandler","addEventListener","addPath","key","generator","override","has","set","stop","effectDrawer","shapeDrawer","keys","delete","clearPlugins","mainArr","dom","idx","findIndex","t","splice","force","refreshTime","_drawAnimationFrame","requestAnimationFrame","export","type","plugin","res","supported","blob","handleClickMode","mode","init","effects","getSupportedEffects","drawer","getEffectDrawer","shapes","getSupportedShapes","getShapeDrawer","availablePlugins","getAvailablePlugins","updateActualOptions","initBackground","resize","duration","delay","setDensity","particlesSetup","loadTheme","name","_currentTheme","refresh","cancelAnimationFrame","needsUpdate","autoPlay","start","reset","Promise","resolve","_delayTimeout","setTimeout","addListeners","HTMLElement","observe","clearTimeout","removeListeners","clear","unobserve","responsive","newMaxWidth","setResponsive","size","width","setTheme","_responsiveMaxWidth"],"sources":["C:/Users/84146/OneDrive/Documents/Portfolio/ParamDesai111.github.io/node_modules/@tsparticles/engine/browser/Core/Container.js"],"sourcesContent":["import { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { errorPrefix } from \"./Utils/Constants.js\";\nimport { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                (entry.isIntersecting ? this.play : this.pause)();\n            }\n        };\n        this._nextFrame = async (timestamp) => {\n            try {\n                if (!this._smooth &&\n                    this._lastFrameTime !== undefined &&\n                    timestamp < this._lastFrameTime + 1000 / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this._lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n                this.addLifeTime(delta.value);\n                this._lastFrameTime = timestamp;\n                if (delta.value > 1000) {\n                    this.draw(false);\n                    return;\n                }\n                await this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.getAnimationStatus()) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.id = Symbol(id);\n        this.fpsLimit = 120;\n        this._smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this._lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        this._intersectionObserver = safeIntersectionObserver((entries) => this._intersectionManager(entries));\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, effectDrawer] of this.effectDrawers) {\n            effectDrawer.destroy && effectDrawer.destroy(this);\n        }\n        for (const [, shapeDrawer] of this.shapeDrawers) {\n            shapeDrawer.destroy && shapeDrawer.destroy(this);\n        }\n        for (const key of this.effectDrawers.keys()) {\n            this.effectDrawers.delete(key);\n        }\n        for (const key of this.shapeDrawers.keys()) {\n            this.shapeDrawers.delete(key);\n        }\n        this._engine.clearPlugins(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = requestAnimationFrame(async (timestamp) => {\n            if (refreshTime) {\n                this._lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this._nextFrame(timestamp);\n        });\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode && plugin.handleClickMode(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const effects = this._engine.getSupportedEffects();\n        for (const type of effects) {\n            const drawer = this._engine.getEffectDrawer(type);\n            if (drawer) {\n                this.effectDrawers.set(type, drawer);\n            }\n        }\n        const shapes = this._engine.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.getShapeDrawer(type);\n            if (drawer) {\n                this.shapeDrawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this._lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this._smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.effectDrawers) {\n            drawer.init && (await drawer.init(this));\n        }\n        for (const [, drawer] of this.shapeDrawers) {\n            drawer.init && (await drawer.init(this));\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.init && (await plugin.init());\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup && plugin.particlesSetup();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause && plugin.pause();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    plugin.start && (await plugin.start());\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop && plugin.stop();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this._responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this._responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}