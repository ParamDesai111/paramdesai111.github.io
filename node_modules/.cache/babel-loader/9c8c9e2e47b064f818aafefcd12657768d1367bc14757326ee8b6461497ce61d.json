{"ast":null,"code":"import { getRangeValue } from \"@tsparticles/engine\";\nexport class StarDrawer {\n  draw(data) {\n    var _particle$starInset;\n    const {\n        context,\n        particle,\n        radius\n      } = data,\n      sides = particle.sides,\n      inset = (_particle$starInset = particle.starInset) !== null && _particle$starInset !== void 0 ? _particle$starInset : 2;\n    context.moveTo(0, 0 - radius);\n    for (let i = 0; i < sides; i++) {\n      context.rotate(Math.PI / sides);\n      context.lineTo(0, 0 - radius * inset);\n      context.rotate(Math.PI / sides);\n      context.lineTo(0, 0 - radius);\n    }\n  }\n  getSidesCount(particle) {\n    var _star$sides;\n    const star = particle.shapeData;\n    return Math.round(getRangeValue((_star$sides = star === null || star === void 0 ? void 0 : star.sides) !== null && _star$sides !== void 0 ? _star$sides : 5));\n  }\n  particleInit(container, particle) {\n    var _star$inset;\n    const star = particle.shapeData;\n    particle.starInset = getRangeValue((_star$inset = star === null || star === void 0 ? void 0 : star.inset) !== null && _star$inset !== void 0 ? _star$inset : 2);\n  }\n}","map":{"version":3,"names":["getRangeValue","StarDrawer","draw","data","_particle$starInset","context","particle","radius","sides","inset","starInset","moveTo","i","rotate","Math","PI","lineTo","getSidesCount","_star$sides","star","shapeData","round","particleInit","container","_star$inset"],"sources":["C:/Users/84146/OneDrive/Documents/Portfolio/ParamDesai111.github.io/node_modules/@tsparticles/shape-star/browser/StarDrawer.js"],"sourcesContent":["import { getRangeValue, } from \"@tsparticles/engine\";\nexport class StarDrawer {\n    draw(data) {\n        const { context, particle, radius } = data, sides = particle.sides, inset = particle.starInset ?? 2;\n        context.moveTo(0, 0 - radius);\n        for (let i = 0; i < sides; i++) {\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius * inset);\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius);\n        }\n    }\n    getSidesCount(particle) {\n        const star = particle.shapeData;\n        return Math.round(getRangeValue(star?.sides ?? 5));\n    }\n    particleInit(container, particle) {\n        const star = particle.shapeData;\n        particle.starInset = getRangeValue(star?.inset ?? 2);\n    }\n}\n"],"mappings":"AAAA,SAASA,aAAa,QAAS,qBAAqB;AACpD,OAAO,MAAMC,UAAU,CAAC;EACpBC,IAAIA,CAACC,IAAI,EAAE;IAAA,IAAAC,mBAAA;IACP,MAAM;QAAEC,OAAO;QAAEC,QAAQ;QAAEC;MAAO,CAAC,GAAGJ,IAAI;MAAEK,KAAK,GAAGF,QAAQ,CAACE,KAAK;MAAEC,KAAK,IAAAL,mBAAA,GAAGE,QAAQ,CAACI,SAAS,cAAAN,mBAAA,cAAAA,mBAAA,GAAI,CAAC;IACnGC,OAAO,CAACM,MAAM,CAAC,CAAC,EAAE,CAAC,GAAGJ,MAAM,CAAC;IAC7B,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,KAAK,EAAEI,CAAC,EAAE,EAAE;MAC5BP,OAAO,CAACQ,MAAM,CAACC,IAAI,CAACC,EAAE,GAAGP,KAAK,CAAC;MAC/BH,OAAO,CAACW,MAAM,CAAC,CAAC,EAAE,CAAC,GAAGT,MAAM,GAAGE,KAAK,CAAC;MACrCJ,OAAO,CAACQ,MAAM,CAACC,IAAI,CAACC,EAAE,GAAGP,KAAK,CAAC;MAC/BH,OAAO,CAACW,MAAM,CAAC,CAAC,EAAE,CAAC,GAAGT,MAAM,CAAC;IACjC;EACJ;EACAU,aAAaA,CAACX,QAAQ,EAAE;IAAA,IAAAY,WAAA;IACpB,MAAMC,IAAI,GAAGb,QAAQ,CAACc,SAAS;IAC/B,OAAON,IAAI,CAACO,KAAK,CAACrB,aAAa,EAAAkB,WAAA,GAACC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEX,KAAK,cAAAU,WAAA,cAAAA,WAAA,GAAI,CAAC,CAAC,CAAC;EACtD;EACAI,YAAYA,CAACC,SAAS,EAAEjB,QAAQ,EAAE;IAAA,IAAAkB,WAAA;IAC9B,MAAML,IAAI,GAAGb,QAAQ,CAACc,SAAS;IAC/Bd,QAAQ,CAACI,SAAS,GAAGV,aAAa,EAAAwB,WAAA,GAACL,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEV,KAAK,cAAAe,WAAA,cAAAA,WAAA,GAAI,CAAC,CAAC;EACxD;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}