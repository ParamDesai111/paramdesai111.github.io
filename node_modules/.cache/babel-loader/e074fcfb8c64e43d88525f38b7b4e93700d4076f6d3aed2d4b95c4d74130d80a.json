{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\84146\\\\OneDrive\\\\Documents\\\\Portfolio\\\\ParamDesai111.github.io\\\\src\\\\components\\\\ParticlesBackground.jsx\";\nimport React from 'react';\nimport Particles from 'react-tsparticles';\nimport { loadFull } from 'tsparticles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticlesBackground = () => {\n  const particlesInit = async main => {\n    console.log(main);\n    // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n    await loadFull(main);\n  };\n  return /*#__PURE__*/_jsxDEV(Particles, {\n    id: \"tsparticles\",\n    init: particlesInit,\n    options: {\n      fullScreen: {\n        enable: false,\n        // Make sure particles won't cover the full screen\n        zIndex: -1 // Use a negative z-index to keep it behind other content\n      },\n      particles: {\n        number: {\n          value: 10\n        },\n        shape: {\n          type: 'image',\n          image: [{\n            src: '/images/gear.png',\n            width: 100,\n            height: 100\n          }, {\n            src: '/images/js.png',\n            width: 100,\n            height: 100\n          }\n          // ...add other icons with similar objects\n          ]\n        },\n        size: {\n          value: 30,\n          random: true\n        },\n        move: {\n          speed: 5,\n          outModes: {\n            default: \"bounce\"\n          }\n        }\n      },\n      interactivity: {\n        events: {\n          onHover: {\n            enable: true,\n            mode: \"repulse\"\n          }\n        }\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = ParticlesBackground;\nexport default ParticlesBackground;\nvar _c;\n$RefreshReg$(_c, \"ParticlesBackground\");","map":{"version":3,"names":["React","Particles","loadFull","jsxDEV","_jsxDEV","ParticlesBackground","particlesInit","main","console","log","id","init","options","fullScreen","enable","zIndex","particles","number","value","shape","type","image","src","width","height","size","random","move","speed","outModes","default","interactivity","events","onHover","mode","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/84146/OneDrive/Documents/Portfolio/ParamDesai111.github.io/src/components/ParticlesBackground.jsx"],"sourcesContent":["import React from 'react';\r\nimport Particles from 'react-tsparticles';\r\nimport { loadFull } from 'tsparticles';\r\n\r\nconst ParticlesBackground = () => {\r\n  const particlesInit = async (main) => {\r\n    console.log(main);\r\n    // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\r\n    await loadFull(main);\r\n  };\r\n\r\n  return (\r\n    <Particles\r\n      id=\"tsparticles\"\r\n      init={particlesInit}\r\n      options={{\r\n        fullScreen: {\r\n          enable: false, // Make sure particles won't cover the full screen\r\n          zIndex: -1 // Use a negative z-index to keep it behind other content\r\n        },\r\n        particles: {\r\n          number: {\r\n            value: 10,\r\n          },\r\n          shape: {\r\n            type: 'image',\r\n            image: [\r\n              { src: '/images/gear.png', width: 100, height: 100 },\r\n              { src: '/images/js.png', width: 100, height: 100 },\r\n              // ...add other icons with similar objects\r\n            ],\r\n          },\r\n          size: {\r\n            value: 30,\r\n            random: true,\r\n          },\r\n          move: {\r\n            speed: 5,\r\n            outModes: {\r\n              default: \"bounce\",\r\n            },\r\n          },\r\n        },\r\n        interactivity: {\r\n          events: {\r\n            onHover: {\r\n              enable: true,\r\n              mode: \"repulse\",\r\n            },\r\n          },\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ParticlesBackground;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,mBAAmB;AACzC,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAChC,MAAMC,aAAa,GAAG,MAAOC,IAAI,IAAK;IACpCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB;IACA,MAAML,QAAQ,CAACK,IAAI,CAAC;EACtB,CAAC;EAED,oBACEH,OAAA,CAACH,SAAS;IACRS,EAAE,EAAC,aAAa;IAChBC,IAAI,EAAEL,aAAc;IACpBM,OAAO,EAAE;MACPC,UAAU,EAAE;QACVC,MAAM,EAAE,KAAK;QAAE;QACfC,MAAM,EAAE,CAAC,CAAC,CAAC;MACb,CAAC;MACDC,SAAS,EAAE;QACTC,MAAM,EAAE;UACNC,KAAK,EAAE;QACT,CAAC;QACDC,KAAK,EAAE;UACLC,IAAI,EAAE,OAAO;UACbC,KAAK,EAAE,CACL;YAAEC,GAAG,EAAE,kBAAkB;YAAEC,KAAK,EAAE,GAAG;YAAEC,MAAM,EAAE;UAAI,CAAC,EACpD;YAAEF,GAAG,EAAE,gBAAgB;YAAEC,KAAK,EAAE,GAAG;YAAEC,MAAM,EAAE;UAAI;UACjD;UAAA;QAEJ,CAAC;QACDC,IAAI,EAAE;UACJP,KAAK,EAAE,EAAE;UACTQ,MAAM,EAAE;QACV,CAAC;QACDC,IAAI,EAAE;UACJC,KAAK,EAAE,CAAC;UACRC,QAAQ,EAAE;YACRC,OAAO,EAAE;UACX;QACF;MACF,CAAC;MACDC,aAAa,EAAE;QACbC,MAAM,EAAE;UACNC,OAAO,EAAE;YACPnB,MAAM,EAAE,IAAI;YACZoB,IAAI,EAAE;UACR;QACF;MACF;IACF;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAACC,EAAA,GAlDIlC,mBAAmB;AAoDzB,eAAeA,mBAAmB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}