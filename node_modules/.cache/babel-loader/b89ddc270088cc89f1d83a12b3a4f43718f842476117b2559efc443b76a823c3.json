{"ast":null,"code":"import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils.js\";\nimport { isArray, isString, itemFromArray } from \"./Utils.js\";\nconst randomColorValue = \"random\",\n  midColorValue = \"mid\",\n  colorManagers = new Map();\nexport function addColorManager(manager) {\n  colorManagers.set(manager.key, manager);\n}\nfunction stringToRgba(input) {\n  for (const [, manager] of colorManagers) {\n    if (input.startsWith(manager.stringPrefix)) {\n      return manager.parseString(input);\n    }\n  }\n  const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i,\n    hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n      return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }),\n    regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i,\n    result = regex.exec(hexFixed);\n  return result ? {\n    a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n    b: parseInt(result[3], 16),\n    g: parseInt(result[2], 16),\n    r: parseInt(result[1], 16)\n  } : undefined;\n}\nexport function rangeColorToRgb(input, index) {\n  let useIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  if (!input) {\n    return;\n  }\n  const color = isString(input) ? {\n    value: input\n  } : input;\n  if (isString(color.value)) {\n    return colorToRgb(color.value, index, useIndex);\n  }\n  if (isArray(color.value)) {\n    return rangeColorToRgb({\n      value: itemFromArray(color.value, index, useIndex)\n    });\n  }\n  for (const [, manager] of colorManagers) {\n    const res = manager.handleRangeColor(color);\n    if (res) {\n      return res;\n    }\n  }\n}\nexport function colorToRgb(input, index) {\n  let useIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  if (!input) {\n    return;\n  }\n  const color = isString(input) ? {\n    value: input\n  } : input;\n  if (isString(color.value)) {\n    return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n  }\n  if (isArray(color.value)) {\n    return colorToRgb({\n      value: itemFromArray(color.value, index, useIndex)\n    });\n  }\n  for (const [, manager] of colorManagers) {\n    const res = manager.handleColor(color);\n    if (res) {\n      return res;\n    }\n  }\n}\nexport function colorToHsl(color, index) {\n  let useIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  const rgb = colorToRgb(color, index, useIndex);\n  return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index) {\n  let useIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  const rgb = rangeColorToRgb(color, index, useIndex);\n  return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n  const r1 = color.r / 255,\n    g1 = color.g / 255,\n    b1 = color.b / 255,\n    max = Math.max(r1, g1, b1),\n    min = Math.min(r1, g1, b1),\n    res = {\n      h: 0,\n      l: (max + min) * 0.5,\n      s: 0\n    };\n  if (max !== min) {\n    res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n    res.h = r1 === max ? (g1 - b1) / (max - min) : res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min);\n  }\n  res.l *= 100;\n  res.s *= 100;\n  res.h *= 60;\n  if (res.h < 0) {\n    res.h += 360;\n  }\n  if (res.h >= 360) {\n    res.h -= 360;\n  }\n  return res;\n}\nexport function stringToAlpha(input) {\n  var _stringToRgba;\n  return (_stringToRgba = stringToRgba(input)) === null || _stringToRgba === void 0 ? void 0 : _stringToRgba.a;\n}\nexport function stringToRgb(input) {\n  return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n  const h = (hsl.h % 360 + 360) % 360,\n    s = Math.max(0, Math.min(100, hsl.s)),\n    l = Math.max(0, Math.min(100, hsl.l)),\n    hNormalized = h / 360,\n    sNormalized = s / 100,\n    lNormalized = l / 100;\n  if (s === 0) {\n    const grayscaleValue = Math.round(lNormalized * 255);\n    return {\n      r: grayscaleValue,\n      g: grayscaleValue,\n      b: grayscaleValue\n    };\n  }\n  const channel = (temp1, temp2, temp3) => {\n      if (temp3 < 0) {\n        temp3 += 1;\n      }\n      if (temp3 > 1) {\n        temp3 -= 1;\n      }\n      if (temp3 * 6 < 1) {\n        return temp1 + (temp2 - temp1) * 6 * temp3;\n      }\n      if (temp3 * 2 < 1) {\n        return temp2;\n      }\n      if (temp3 * 3 < 2) {\n        return temp1 + (temp2 - temp1) * (2 / 3 - temp3) * 6;\n      }\n      return temp1;\n    },\n    temp1 = lNormalized < 0.5 ? lNormalized * (1 + sNormalized) : lNormalized + sNormalized - lNormalized * sNormalized,\n    temp2 = 2 * lNormalized - temp1,\n    red = Math.min(255, 255 * channel(temp2, temp1, hNormalized + 1 / 3)),\n    green = Math.min(255, 255 * channel(temp2, temp1, hNormalized)),\n    blue = Math.min(255, 255 * channel(temp2, temp1, hNormalized - 1 / 3));\n  return {\n    r: Math.round(red),\n    g: Math.round(green),\n    b: Math.round(blue)\n  };\n}\nexport function hslaToRgba(hsla) {\n  const rgbResult = hslToRgb(hsla);\n  return {\n    a: hsla.a,\n    b: rgbResult.b,\n    g: rgbResult.g,\n    r: rgbResult.r\n  };\n}\nexport function getRandomRgbColor(min) {\n  const fixedMin = min !== null && min !== void 0 ? min : 0;\n  return {\n    b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    r: Math.floor(randomInRange(setRangeValue(fixedMin, 256)))\n  };\n}\nexport function getStyleFromRgb(color, opacity) {\n  return \"rgba(\".concat(color.r, \", \").concat(color.g, \", \").concat(color.b, \", \").concat(opacity !== null && opacity !== void 0 ? opacity : 1, \")\");\n}\nexport function getStyleFromHsl(color, opacity) {\n  return \"hsla(\".concat(color.h, \", \").concat(color.s, \"%, \").concat(color.l, \"%, \").concat(opacity !== null && opacity !== void 0 ? opacity : 1, \")\");\n}\nexport function colorMix(color1, color2, size1, size2) {\n  let rgb1 = color1,\n    rgb2 = color2;\n  if (rgb1.r === undefined) {\n    rgb1 = hslToRgb(color1);\n  }\n  if (rgb2.r === undefined) {\n    rgb2 = hslToRgb(color2);\n  }\n  return {\n    b: mix(rgb1.b, rgb2.b, size1, size2),\n    g: mix(rgb1.g, rgb2.g, size1, size2),\n    r: mix(rgb1.r, rgb2.r, size1, size2)\n  };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n  if (linkColor === randomColorValue) {\n    return getRandomRgbColor();\n  } else if (linkColor === midColorValue) {\n    var _p1$getFillColor, _p2$getFillColor;\n    const sourceColor = (_p1$getFillColor = p1.getFillColor()) !== null && _p1$getFillColor !== void 0 ? _p1$getFillColor : p1.getStrokeColor(),\n      destColor = (_p2$getFillColor = p2 === null || p2 === void 0 ? void 0 : p2.getFillColor()) !== null && _p2$getFillColor !== void 0 ? _p2$getFillColor : p2 === null || p2 === void 0 ? void 0 : p2.getStrokeColor();\n    if (sourceColor && destColor && p2) {\n      return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n    } else {\n      const hslColor = sourceColor !== null && sourceColor !== void 0 ? sourceColor : destColor;\n      if (hslColor) {\n        return hslToRgb(hslColor);\n      }\n    }\n  } else {\n    return linkColor;\n  }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n  const color = isString(optColor) ? optColor : optColor.value;\n  if (color === randomColorValue) {\n    if (consent) {\n      return rangeColorToRgb({\n        value: color\n      });\n    }\n    if (blink) {\n      return randomColorValue;\n    }\n    return midColorValue;\n  } else if (color === midColorValue) {\n    return midColorValue;\n  } else {\n    return rangeColorToRgb({\n      value: color\n    });\n  }\n}\nexport function getHslFromAnimation(animation) {\n  return animation !== undefined ? {\n    h: animation.h.value,\n    s: animation.s.value,\n    l: animation.l.value\n  } : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n  const resColor = {\n    h: {\n      enable: false,\n      value: hsl.h\n    },\n    s: {\n      enable: false,\n      value: hsl.s\n    },\n    l: {\n      enable: false,\n      value: hsl.l\n    }\n  };\n  if (animationOptions) {\n    setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n    setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n    setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n  }\n  return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n  colorValue.enable = colorAnimation.enable;\n  if (colorValue.enable) {\n    colorValue.velocity = getRangeValue(colorAnimation.speed) / 100 * reduceFactor;\n    colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n    colorValue.status = \"increasing\";\n    colorValue.loops = 0;\n    colorValue.maxLoops = getRangeValue(colorAnimation.count);\n    colorValue.time = 0;\n    colorValue.delayTime = getRangeValue(colorAnimation.delay) * 1000;\n    if (!colorAnimation.sync) {\n      colorValue.velocity *= getRandom();\n      colorValue.value *= getRandom();\n    }\n    colorValue.initialValue = colorValue.value;\n  } else {\n    colorValue.velocity = 0;\n  }\n}","map":{"version":3,"names":["getRandom","getRangeValue","mix","randomInRange","setRangeValue","isArray","isString","itemFromArray","randomColorValue","midColorValue","colorManagers","Map","addColorManager","manager","set","key","stringToRgba","input","startsWith","stringPrefix","parseString","shorthandRegex","hexFixed","replace","_","r","g","b","a","undefined","regex","result","exec","parseInt","rangeColorToRgb","index","useIndex","arguments","length","color","value","colorToRgb","res","handleRangeColor","getRandomRgbColor","stringToRgb","handleColor","colorToHsl","rgb","rgbToHsl","rangeColorToHsl","r1","g1","b1","max","Math","min","h","l","s","stringToAlpha","_stringToRgba","hslToRgb","hsl","hNormalized","sNormalized","lNormalized","grayscaleValue","round","channel","temp1","temp2","temp3","red","green","blue","hslaToRgba","hsla","rgbResult","fixedMin","floor","getStyleFromRgb","opacity","concat","getStyleFromHsl","colorMix","color1","color2","size1","size2","rgb1","rgb2","getLinkColor","p1","p2","linkColor","_p1$getFillColor","_p2$getFillColor","sourceColor","getFillColor","getStrokeColor","destColor","getRadius","hslColor","getLinkRandomColor","optColor","blink","consent","getHslFromAnimation","animation","getHslAnimationFromHsl","animationOptions","reduceFactor","resColor","enable","setColorAnimation","colorValue","colorAnimation","velocity","speed","decay","status","loops","maxLoops","count","time","delayTime","delay","sync","initialValue"],"sources":["C:/Users/84146/OneDrive/Documents/Portfolio/ParamDesai111.github.io/node_modules/@tsparticles/engine/browser/Utils/ColorUtils.js"],"sourcesContent":["import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils.js\";\nimport { isArray, isString, itemFromArray } from \"./Utils.js\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\n    return result\n        ? {\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n            b: parseInt(result[3], 16),\n            g: parseInt(result[2], 16),\n            r: parseInt(result[1], 16),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: 0,\n        l: (max + min) * 0.5,\n        s: 0,\n    };\n    if (max !== min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n        res.h += 360;\n    }\n    if (res.h >= 360) {\n        res.h -= 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    return stringToRgba(input)?.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const h = ((hsl.h % 360) + 360) % 360, s = Math.max(0, Math.min(100, hsl.s)), l = Math.max(0, Math.min(100, hsl.l)), hNormalized = h / 360, sNormalized = s / 100, lNormalized = l / 100;\n    if (s === 0) {\n        const grayscaleValue = Math.round(lNormalized * 255);\n        return { r: grayscaleValue, g: grayscaleValue, b: grayscaleValue };\n    }\n    const channel = (temp1, temp2, temp3) => {\n        if (temp3 < 0) {\n            temp3 += 1;\n        }\n        if (temp3 > 1) {\n            temp3 -= 1;\n        }\n        if (temp3 * 6 < 1) {\n            return temp1 + (temp2 - temp1) * 6 * temp3;\n        }\n        if (temp3 * 2 < 1) {\n            return temp2;\n        }\n        if (temp3 * 3 < 2) {\n            return temp1 + (temp2 - temp1) * (2 / 3 - temp3) * 6;\n        }\n        return temp1;\n    }, temp1 = lNormalized < 0.5 ? lNormalized * (1 + sNormalized) : lNormalized + sNormalized - lNormalized * sNormalized, temp2 = 2 * lNormalized - temp1, red = Math.min(255, 255 * channel(temp2, temp1, hNormalized + 1 / 3)), green = Math.min(255, 255 * channel(temp2, temp1, hNormalized)), blue = Math.min(255, 255 * channel(temp2, temp1, hNormalized - 1 / 3));\n    return { r: Math.round(red), g: Math.round(green), b: Math.round(blue) };\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n        colorValue.status = \"increasing\";\n        colorValue.loops = 0;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = 0;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * 1000;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}